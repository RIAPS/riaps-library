// RIAPS Modbus (UART) Device Testing

app RIAPSModbusCReqRepUART {

    message CommandFormat; 
    message ResponseFormat;
    message LogData;

    // Modbus (UART) device interface - UART2
    //     considered the server for the request/response interaction
    device ModbusUART (slaveaddress=10, port='UART2', baudrate=115200, numholdreg=3, numinputreg=4) {
        rep modbusRepPort : (CommandFormat,ResponseFormat);
        timer clock 10;
    } 
	 
    // Example Component to show Modbus I/F usage
    component ComputationalComponent() {
      timer clock 40;
      pub tx_modbusData : LogData;                        // When data is ready,
      req modbusReqPort : (CommandFormat,ResponseFormat); // Port used to communicate with the ModbusUartDevice
    }

    component Logger(db_host='127.0.0.1', db_port=8086, db_name='MOdbusIO', db_user='riaps', db_password='riaps') {
      sub rx_modbusData : LogData;
    }

    // Modbus Communication Example actor
    actor ModbusExampleActor() {
        local CommandFormat,ResponseFormat;               // Local message types
        {
            commInitiator : ComputationalComponent;
            modbusinstance : ModbusUART(slaveaddress=10, port='UART2', baudrate=115200, numholdreg=3, numinputreg=4);
        }
    }

    actor ModbusLogger(){
        {
            logger : Logger(db_host='127.0.0.1', db_port=8086, db_name='ModbusIO', db_user='riaps', db_password='riaps');
        }
    }
}
